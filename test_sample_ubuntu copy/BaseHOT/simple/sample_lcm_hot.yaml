heat_template_version: 2013-05-23
description: 'imple Base HOT for Sample VNF'

parameters:
  nfv:
    type: json
  security_group:
    type: string
    default: default

resources:
  internalVL1:
    type: OS::Neutron::Net

  internalVL1_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ internalVL1 ]
    properties:
      ip_version: 4
      network:
        get_resource: internalVL1
      cidr: 192.168.0.0/24

  VDU1:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 120
      desired_capacity: { get_param: [nfv, VDU, VDU1, number_of_instance ] }
      max_size: 3
      min_size: 1
      resource:
        type: VDU1.yaml
        properties:
          Image: { get_param: [ nfv, VDU, VDU1, image ] }
          Flavor: { get_param: [ nfv, VDU, VDU1, flavor ] }
          IntNetwork: { get_resource: internalVL1 }
          IntFixedIP: 192.168.0.10
          ExtNetwork: { get_param: [ nfv, CP, VDU1_CP1, network_id ] }
          ExtFixedIP:
            get_param: [ nfv, CP, VDU1_CP1, subnets, 0, fixed_ip_addresses, 0 ]
          AvailabilityZone: { get_param: vdu2_availabilityzone }
          Server_Group: { get_resource: vdu_placement_policy }

  VDU1_scale_in:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id:
        get_resource: VDU1
      cooldown: 120
      scaling_adjustment: -1

  VDU1_scale_out:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id:
        get_resource: VDU1
      cooldown: 120
      scaling_adjustment: 1

  vdu_placement_policy:
    type: OS::Nova::ServerGroup
    properties:
      name: vdu_placement_policy
      policies:
        - soft-anti-affinity
outputs: {}

